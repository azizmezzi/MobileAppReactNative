stages:
  - test
  - sonarqube-check
  - deploy

test:
  stage: test
  tags:
    - rntest
  before_script:
    - yarn install
  script:
    - yarn test
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml
  only:
    - merge_requests
    - master
    - develop

sonarqube-check:
  tags:
    - rntest
  stage: sonarqube-check
  variables:
    SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar' # Defines the location of the analysis task cache
    GIT_DEPTH: '0' # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -D"sonar.qualitygate.wait=true" -D"sonar.projectKey=Nooba" -D"sonar.sources=." -D"sonar.host.url=${SONAR_HOST_URL}" -D"sonar.login=${SONAR_TOKEN}"
  allow_failure: true
  only:
    - merge_requests
    - master
    - develop
  needs: [test]

.job_template: &job_deploy
  stage: deploy
  before_script:
    - yarn install
  after_script:
    - cp $OUTPUT_PATH.$FILE_TYPE $CI_PROJECT_NAME-$CI_COMMIT_REF_NAME.$FILE_TYPE
  artifacts:
    name: '$CI_PROJECT_NAME-$PLATFORM-$CI_COMMIT_REF_NAME'
    paths:
      - $CI_PROJECT_NAME-$CI_COMMIT_REF_NAME.$FILE_TYPE
    expire_in: 7 days
  when: on_success
  needs: [sonarqube-check]
  only:
    - merge_requests
    - master
    - develop

deploy:android:prod:
  tags:
    - rnbuild_android
  variables:
    PLATFORM: android
    FILE_TYPE: apk
    OUTPUT_PATH: android/app/build/outputs/apk/release/app-release
  <<: *job_deploy
  script:
    - cd android && ./gradlew assembleRelease -PMYAPP_RELEASE_STORE_PASSWORD=$KEYSTORE_PASSWORD -PMYAPP_RELEASE_KEY_PASSWORD=$KEYSTORE_PASSWORD

deploy:ios:prod:
  tags:
    - rnbuild_ios
  variables:
    PLATFORM: ios
    FILE_TYPE: ipa
    OUTPUT_PATH: ./$CI_PROJECT_NAME
  <<: *job_deploy
  script:
    - export PACKAGE_NAME=$(node -p -e "require('./package.json').name")
    - cd ios
    - pod install
    - python3 mod.py
    - xcodebuild -quiet -workspace $PACKAGE_NAME.xcworkspace -scheme $PACKAGE_NAME clean archive -configuration release  -sdk iphoneos -archivePath $PACKAGE_NAME.xcarchive
    - xcodebuild -quiet -exportArchive -archivePath ./$PACKAGE_NAME.xcarchive -exportPath . -exportOptionsPlist $PACKAGE_NAME/Info.plist
    - mv $PACKAGE_NAME.ipa ../$PACKAGE_NAME.ipa
